# -*- coding: utf-8 -*-
import numpy as np
import pandas as pd
import urllib


import time as newtime
import datetime
import requests
import json
import saupjang_info_list


def timeTOunixtime (rlt):
        #YYYY [0:4], MM [4:6], DD [6:8], HH [8:10], m[10:12]
        stime = "%s/%s/%s" %(rlt[6:8], rlt[4:6], rlt[0:4])
        h = rlt[8:10]

	if len(rlt) == 10: # without minutes
		m = '00'
	else:
        	m = rlt[10:12]

        #unixtime need to have 1 sec unit scale
        dechour = int(h)*60*60
        dechour += int(m)*60
        unixday = newtime.mktime(datetime.datetime.strptime(stime, "%d/%m/%Y").timetuple())
        unixtime = unixday + dechour

        return int(unixtime)

# main function
if __name__ == "__main__":


    size_info=pd.read_csv("sizeinfo.csv")
    saupjang_info = pd.read_csv("name_saupjang.csv")

    sizeinfo_dic={'201602260146-1':1.120,'201602260146-2':1.120 ,'201602230040-1': 23.31, '201602260170-1': 1.2, '201602230038-1': 28.35, '201602230021-1': 3.56, '201602230035-1': 2.25, '201602220022-1': 0.9, '201602230026-1': 0.48, '201602220019-2': 0.774, '201602220019-1': 0.882, '201602260133-1': 0.96, '201602240040-1': 21.95, '201602250026-1': 0.9, '201602260101-1': 47.25, '201602260077-1': 47.25, '201602260070-1': 1.26, '201602240055-1': 25.89, '201602250049-1': 23.81, '201602250039-1': 1.4, '201602260148-1': 1.68, '201602230055-1': 108.78, '201602240022-1': 100.8, '201602250052-1': 1.14, '201602250007-1': 5.64, '201602260112-1': 0.9, '201602230032-1': 54.26, '201602260064-2': 0.978, '201602260064-3': 1.27, '201602260064-1': 0.992, '201602260027-1': 0.9, '201602260064-4': 1.284, '201602260064-5': 1.197, '201602240044-1': 26.07, '201602260052-1': 0.945, '201602240054-1': 21.9, '201602240002-2': 21.756, '201602240076-1': 19.64, '201602250017-1': 0.9, '201602260128-2': 12.936, '201602260128-1': 12.936, '201602240087-1': 2.96, '201602250027-1': 56.7, '201602260142-1': 0.78, '201602260015-1': 0.8, '201602240084-1': 2.4, '201602220012-1': 27.23, '201602260115-2': 0.68, '201602260115-1': 0.68, '201602260045-1': 1.2, '201602260166-1': 1.764, '201602260043-1': 0.56, '201602240004-1': 8.82, '201602240061-1': 12.936, '201602230023-1': 52.92, '201602240061-2': 12.936, '201602240011-1': 23.31, '201602250028-1': 3.72, '201602240012-1': 2.52, '201602260085-1': 0.8595, '201602260085-2': 1.0, '201602240072-1': 27.56, '201602240074-1': 25.25, '201602230010-1': 44.1, '201602260120-2': None, '201602260120-1': None, '201602260086-1': 1.2, '201602240047-1': 20.02, '201602240042-1': 21.95, '201602260171-1': 1.0878, '201602230034-1': 21.5, '201602230027-1': 64.68, '201602230027-2': 64.68, '201602220023-1': 0.46, '201602230049-1': 0.42, '201602230049-2': 0.3, '201602240002-3': 21.756, '201602230024-2': 0.72, '201602230024-1': 0.72, '201602250024-1': 1.04, '201602240016-1': 26.46, '201602250009-1': 1.265, '201602220020-1': 32.34, '201602260096-1': 2.0, '201602240006-1': 1.86, '201602260161-1': 2.664, '201602260135-1': 1.89, '201602240019-1': 21.756, '201602250062-1': 2.009, '201602260039-1': 0.64, '201602230051-1': 6.468, '201602260018-1': 0.63, '201602240037-1': 1.87, '201602260065-1': 2.24, '201602240039-1': 7.2, '201602250005-1': 32.34, '201602250006-1': 1.705, '201602260026-1': 1.65, '201602260104-1': 10.36, '201602240008-2': 17.64, '201602230043-1': 32.34, '201602250071-1': 1.33, '201602240025-1': 17.64, '201602240075-1': 20.13, '201602230012-1': 47.25, '201602230012-2': 47.25, '201602240086-1': 20.574, '201602240028-1': 2.97, '201602240085-1': 0.42, '201602260058-1': 0.84, '201602220018-1': 0.496, '201602260126-1': 55.86, '201602250047-1': 1.4, '201602260153-1': 0.504, '201602220010-1': 1.44, '201602260041-1': 1.1, '201602260164-1': 0.8, '201602250004-1': 2.4, '201602250029-1': 5.61, '201602250064-1': 77.616, '201602250032-1': 0.764, '201602260084-2': 13.27, '201602260084-3': 6.33, '201602260084-4': 7.11, '201602230018-1': 1.491, '201602250058-1': 1.152, '201602260150-1': 2.4, '201602240059-1': 10.878, '201602260051-1': 0.96, '201602240014-2': 0.96}

    #사업번호,사전계측용량 129개

    mdsid__idlist=[['201602220010-1', '00-450083471'], ['201602220018-1', '00-360000189'], ['201602220019-1', '00-360000201'], ['201602220019-2', '01223187332-0001'], ['201602220022-1', '00-450083432'], ['201602220023-1', '00-360000228'], ['201602230018-1', '00-360000217'], ['201602230024-1', '00-360000193'], ['201602230024-2', '00-360000181'], ['201602230026-1', '00-360000092'], ['201602230049-1', '00-360000191'], ['201602230049-2', '00-360000196'], ['201602240006-1', '00-250071151'], ['201602240012-1', '00-250130378'], ['201602240014-2', '00-450083464'], ['201602240028-1', '00-250059775'], ['201602240037-1', '00-250059925'], ['201602240084-1', '00-250059956'], ['201602240085-1', '00-450083463'], ['201602240086-1', '00-250059997'], ['201602240087-1', '00-250059999'], ['201602250004-1', '00-250068218'], ['201602250006-1', '00-250130336'], ['201602250007-1', '00-250130363'], ['201602250009-1', '00-360000213'], ['201602250017-1', '00-360000177'], ['201602250024-1', '00-251000081'], ['201602250026-1', '00-250071467'], ['201602250028-1', '00-250130380'], ['201602250029-1', '00-250130344'], ['201602250032-1', '00-250071438'], ['201602250039-1', '00-250102801'], ['201602250047-1', '00-250102798'], ['201602250052-1', '00-250102710'], ['201602250058-1', '00-360000001'], ['201602250062-1', '00-250130335'], ['201602250071-1', '00-250059861'], ['201602260015-1', '00-250007125'], ['201602260018-1', '00-250130307'], ['201602260026-1', '00-250070994'], ['201602260027-1', '00-250059719'], ['201602260039-1', '00-250071087'], ['201602260041-1', '00-250130381'], ['201602260043-1', '00-250130376'], ['201602260045-1', '00-250071451'], ['201602260051-1', '00-250102648'], ['201602260052-1', '00-250059853'], ['201602260058-1', '00-250071028'], ['201602260064-1', '00-250130359'], ['201602260064-2', '00-250130358'], ['201602260064-3', '00-250130357'], ['201602260064-4', '00-250130356'], ['201602260064-5', '00-250130355'], ['201602260065-1', '00-250068197'], ['201602260070-1', '00-360000214'], ['201602260085-1', '00-251004064'], ['201602260085-2', '00-251009025'], ['201602260086-1', '00-250071144'], ['201602260096-1', '00-250071464'], ['201602260112-1', '00-250102644'], ['201602260115-1', '00-250071172'], ['201602260115-2', '00-250071188'], ['201602260120-1', '00-250071368'], ['201602260120-2', '00-250071319'], ['201602260142-1', '00-250130331'], ['201602260146-1', '00-250130338'], ['201602260153-1', '00-250130323'], ['201602260161-1', '00-250059854'], ['201602260164-1', '00-250071181'], ['201602260166-1', '00-250071005'], ['201602260170-1', '00-250071191'], ['201602260171-1', '00-250068232'], ['201602240074-1', '00-250068192'], ['201602240076-1', '00-250068215'], ['201602260150-1', '00-250059947'], ['201602260104-1', '00-250071625'], ['201602260148-1', '00-250071696'], ['201602240054-1', '00-250068198'], ['201602240047-1', '00-250059803'], ['201602240044-1', '00-250070992'], ['201602230021-1', '00-250071057'], ['201602220012-1', '00-250068178'], ['201602240042-1', '00-360000224'], ['201602240055-1', '00-250071186'], ['201602240072-1', '00-250071681'], ['201602240075-1', '00-250060022'], ['201602240039-1', '00-250071550'], ['201602240040-1', '00-250059813'], ['201602230034-1', '00-250059812'], ['201602230035-1', '00-250071659'], ['201602260084-2', '00-250071310'], ['201602260084-3', '00-250071311'], ['201602260084-4', '00-250071336'], ['201602260133-1', '00-250071387'], ['201602260135-1', '00-360000008'], ['201602250049-1', '00-250130342'], ['201602220020-1', '00-250071507'], ['201602230010-1', '00-250130375'], ['201602230012-1', '01224273046-0301'], ['201602230012-2', '00-360000281'], ['201602230023-1', '00-360000229'], ['201602230027-1', '00-250071026'], ['201602230027-2', '00-250071032'], ['201602230032-1', '00-250059909'], ['201602230038-1', '00-360000165'], ['201602230040-1', '00-250130333'], ['201602230043-1', '00-250071086'], ['201602230051-1', '00-450083448'], ['201602230055-1', '00-250071104'], ['201602240002-2', '00-360000107'], ['201602240002-3', '00-360000093'], ['201602240004-1', '00-250059998'], ['201602240008-2', '00-450083462'], ['201602240011-1', '00-250068171'], ['201602240016-1', '00-250068164'], ['201602240019-1', '00-360000182'], ['201602240022-1', '00-360000090'], ['201602240025-1', '00-360000005'], ['201602240059-1', '00-250068144'], ['201602240061-1', '00-250059765'], ['201602240061-2', '00-250059836'], ['201602250005-1', '00-360000212'], ['201602250027-1', '00-250130339'], ['201602250064-1', '00-360000014'], ['201602260077-1', '00-250071679'], ['201602260101-1', '00-251009632'], ['201602260126-1', '00-250071549'], ['201602260128-1', '00-250071370'], ['201602260128-2', '00-250071371']]
    for information in mdsid__idlist:

        MDSID = information[1]

        SaupjangID=information[0][0:information[0].find('-')]+'-0'+ str(information[0])[str(information[0]).find('-')+1]

        size=sizeinfo_dic[information[0]]

        url = "http://125.140.110.217:4242/api/put"
        timelist = ['2017043000', '2016110100', '2017022800', '2017040100', '2016060600']

        for time in timelist:
            uxtime = timeTOunixtime(time)
            data = {
                "metric": "energy_new",
                "timestamp": uxtime,
                "value": size,  # 설비용량(일정 비율을 곱한..값..)
                "tags": {
                    "Saupjang": SaupjangID  # 사업장 번호->사업자 번호가 아니고 사업장 번호여야 함!!!!!

                }
            }
            # print data
            ret = requests.post(url, data=json.dumps(data))
        print MDSID,SaupjangID,size
        url_query ='http://125.140.110.217:4242/q?start=2016/11/01-00:00:00&end=2017/04/30-00:00:00&m=avg:origin_data_please%7BMDS_ID='+MDSID+'%7D&o=&m=sum:energy_new%7BSaupjang='+SaupjangID+'%7D&o=axis%20x1y2&yrange=%5B0:%5D&y2range=%5B0:%5D&key=out%20bottom%20center&wxh=1000x700&style=linespoint&png'

        name= saupjang_info[saupjang_info['사업장번호'] == int(information[0][2:information[0].find('-')])]['사업장명'].values[0]
        print name
        print type(name)
        #한글이름 추가가 안되서 일단 MDS아이디만 제목에 넣었습니다.

        pngname = 'enegy_show_' +str(MDSID) + '.jpg'
        print pngname
        urllib.urlretrieve(url_query, unicode(pngname, "949") )

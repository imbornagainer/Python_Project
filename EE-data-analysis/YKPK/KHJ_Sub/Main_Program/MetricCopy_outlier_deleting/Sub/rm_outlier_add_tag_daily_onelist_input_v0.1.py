# -*- coding: utf-8 -*-
# Author : hwijinkim , https://github.com/jeonghoonkang

# max_value로 가동률 계산, 그리고 계산한 값을 다른 metric에 put 
# last modified by 20171106

import requests
from requests.adapters import HTTPAdapter
from requests.packages.urllib3.util.retry import Retry
import json
import socket
import copy
import numpy as np
import datetime
import time

USE_HTTP_API_PUT = False

def pack_dps(metric, dps, tags):
    pack = []
    #print 'tags : %s' % tags
    tag = {'metric': metric, 'tags': tags}
    
    for dp in dps:
        #print 'dp : %s' % dp
        sdp = copy.copy(tag)
        sdp['timestamp'] = int(dp.encode('utf8'))
        sdp['value'] = dps[dp]
        #print sdp
        pack.append(sdp)
    return pack

def requests_retry_session(
    retries=3,
    backoff_factor=0.3,
    status_forcelist=(500, 502, 504),
    session=None,
):
    session = session or requests.Session()
    retry = Retry(
        total=retries,
        read=retries,
        connect=retries,
        backoff_factor=backoff_factor,
        status_forcelist=status_forcelist,
    )
    adapter = HTTPAdapter(max_retries=retry)
    session.mount('http://', adapter)
    session.mount('https://', adapter)
    return session

def tsdb_query(query, start, end, metric, modem_num, holiday):
    param = {}
    if start: param['start'] = start
    if end: param['end'] = end
    param['m'] = metric + '{' + 'holiday={1!s},modem_num={0!s}'.format(modem_num, holiday) + '}'
    #print param
    if 1:
        response = requests.get(query, params=param)
        if response.ok:
            #print response.text
            return response.json()
        else:
            print 'request fails'
            return []
    else:
        try:
            response = requests_retry_session().get(query, params=param, timeout=5)
        except Exception as x:
            print 'requests timeout'
        else:
            if response.ok:
                #print response.text
                return response.json()
        return []

def tsdb_put(put, metric, dps, tags, file=None):
    packed_data = pack_dps(metric, dps, tags)
    for i in xrange(0, len(packed_data), 8):
        tmp = json.dumps(packed_data[i:i+8])
        #print tmp
        if 0:
            response = requests.post(put, data=tmp)
        if response.text: print response.text
        else:
            try:
                response = requests_retry_session().post(put, data=tmp, timeout=5)
            except Exception as x:
                print 'requests timeout'
            else:
                if response.text: print response.text
    return

def tsdb_put_telnet(host, port, metric, dps, tags, file='False'):
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    retry = 9999
    #print 'socket error: ' + host
    while 1:
        try:
            sock.connect((host, port))
        except:
            print 'socket error: ' + host
            time.sleep(5)
            print 'time sleep 5second'
            if retry > 0:
                sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
                continue
            else:
                print 'skip this dps'
                return
        else:
            break
    send = ''
    count = 0
    #print 'put dps: {0} requested...'.format(len(dps))
    
    packed_data = pack_dps(metric, dps, tags)

    for dp in packed_data:        
        if len(send) >= 1024:
            #print send + '\n\n'
            sock.sendall(send)
            #if file: file.write(send)
            send = ''
        try:
            send += 'put'
            send += ' {0!s}'.format(dp['metric'])
            send += ' {0!r}'.format(dp['timestamp'])
            send += ' {0!r}'.format((dp['value']/max_value[dp['tags']['modem_num']])*100)   # 최대값으로 가동율 구하는 공식 (dps/최대값) * 100
        except:
            continue
        else:
            if 'tags' in dp:
                for key in dp['tags']:
                    #print 'key : %s' % key
                    send += ' {0!s}'.format(key) + '={0!s}'.format(dp['tags'] [key])
            send += '\n'
            count += 1
    #print 'send : ' + send
    if len(send) > 0:
        #print send + '\n\n'
        sock.sendall(send)
        #if file: file.write(send)
        send = ''
    sock.close()
    #print 'put dps: {0} processed...'.format(count)
    return

# outlier log 기록함수
# open의 경로명을 설정해주어야 한다.
def Chk_Outlier(chk_num, adj_modem_num,mds_id,unix_time, value):
    if chk_num == 1:
        f = open('outlier_lists_171102_modem_v1.txt', 'w')    # 경로설정 / 덮어쓰기
        f.write('%d:\n' % chk_num)
        f.write('modem_num : %s\n' % adj_modem_num)
        f.write('_mds_id   : %s\n' % mds_id)
        f.write('unix_time : %s\n' % ts2datetime(unix_time))
        f.write('value     : %s\n' % value)
        f.write('\n')
        f.close()
    else:
        f = open('outlier_lists_171102_modem_v1.txt', 'a')    # 경로설정 / 이어쓰기
        f.write('%d:\n' % chk_num)
        f.write('modem_num : %s\n' % adj_modem_num)
        f.write('_mds_id   : %s\n' % mds_id)
        f.write('unix_time : %s\n' % ts2datetime(unix_time))
        f.write('value     : %s\n' % value)
        f.write('\n')
        f.close()

def ts2datetime(ts_str):
    return datetime.datetime.fromtimestamp(int(ts_str)).strftime('%Y/%m/%d-%H:%M:%S')

def datetime2ts(dt_str):
    dt = datetime.datetime.strptime(dt_str, "%Y/%m/%d-%H:%M:%S")
    return time.mktime(dt.timetuple())

def str2datetime(dt_str):
    return datetime.datetime.strptime(dt_str, "%Y/%m/%d-%H:%M:%S")

def datetime2str(dt):
    return dt.strftime('%Y/%m/%d-%H:%M:%S')

def add_time(dt_str, days=0, hours=0):
    return datetime2str(str2datetime(dt_str) + datetime.timedelta(days=days, hours=hours))

def is_past(dt_str1, dt_str2):
    return datetime2ts(dt_str1) < datetime2ts(dt_str2)

def is_weekend(dt_str):
    if str2datetime(dt_str).weekday() >= 5: return '1'
    else: return '0'

if __name__ == '__main__':
    # 1. 설정값 입력
    host  = '125.140.110.217'                                       # get할 url
    port  = 4242                                                    # get할 port 번호
    query = 'http://{0!s}:{1!r}/api/query'.format(host, port)       # opentsdb에서 get할 url 주소
    put   = 'http://{0!s}:{1!r}/api/put?summary'.format(host, port) # opentsdb에서 put할 url 주소
    first = '2016/07/01-00:00:00'                                   # get 시작일
    last  = '2017/05/01-00:00:00'                                   # get 종료일
    metric_in  = 'none:rc05_excel_detail_copy_tag_v1'               # get할 metric명
    #metric_in  = 'sum:rc04_simple_data_v3'
    metric_out = 'rc05_operation_tag_v3'                            # put할 metric명
    #metric_out = 'RazaTheChained_v4'
    chk_number = 0                                                  # outlier 횟수
    max_value = { '01222799986': 1.051000, '01220800574': 0.372000, '01224230529': 0.350000, '01222714543': 0.784000, '01224230467': 1.200000, '01223239869': 0.202000, '01224230576': 1.868000, '01222679989': 0.371000, '01222746396': 0.893000, '01222746350': 0.285000, '01224230549': 0.227000, '01223192391': 0.092000, '01221343888': 0.044000, '01224230577': 0.240000, '01222729929': 0.116000, '01221574361': 0.000000, '01224230493': 0.531000, '01224230501': 0.536000, '01224272949': 0.000000, '01224230526': 0.427000, '01221386983': 0.378000, '01223239875': 0.235000, '01223239870': 0.185000, '01221451993': 0.143000, '01221251996': 0.122000, '01224230542': 1.008000, '01224230434': 0.918000, '01224230480': 1.206000, '01224230484': 0.830000, '01224230485': 0.838000, '01224230470': 0.726000, '01222746456': 0.157000, '01222742834': 0.160000, '01223219133': 0.108000, '01223219131': 0.079000, '01223219130': 0.077000, '01223219129': 0.149000, '01223192247': 3.016000, '01222745462': 0.459000, '01221574357': 0.508000, '01222699986': 0.078000, '01222742200': 0.622000, '01222649984': 0.058000, '01222754504': 0.263000, '01222739929': 0.941000, '01224230571': 0.405000, '01222674503': 0.886000, '01224230527': 0.270000, '01224230569': 0.626000, '01222669986': 0.382000, '01223187397': 0.506000, '01223209886': 0.248000, '01222764501': 0.850000, '01222742912': 4.854000, '01224272962': 0.412000, '01222745935': 0.548000, '01222745933': 1.089000, '01222745947': 0.627000, '01222742969': 0.421000, '01222742878': 0.101000, '01222746463': 6.642000, '01223239874': 0.771000, '01223239873': 0.563000, '01222704503': 0.104000, '01223187431': 0.139000, '01223187430': 0.136000, '01224272938': 0.092000, '01222745939': 0.106000, '01222674501': 1.140000, '01220684147': 2.224000, '01222694501': 0.519000, '01222734501': 0.525000, '01223187419': 0.622000, '01223188270': 0.676000, '01223189537': 0.311000, '01222769929': 0.443000, '01221574356': 1.384000, '01224230509': 0.358000, '01224230472': 0.342000, '01224230478': 0.400000, '01222746390': 0.261000, '01222745510': 0.188000, '01222719929': 0.321000, '01221574359': 0.229000, '01222746366': 1.088000, '01222779929': 0.586000, '01223239865': 0.259000, '01223219128': 0.325000, '01224230518': 0.191000, '01223187436': 0.465000, '01223188269': 0.644000, '01222754503': 0.203000, '01222742885': 0.766000, '01222745938': 0.580000, '01222724503': 0.316000, '01222704504': 0.479000, '01222742752': 7.938000, '01222694503': 0.196000, '01224230546': 0.400000, '01221341991': 0.281000, '01224224149': 1.009000, '01220800623': 1.017000, '01220435025': 1.371000, '01224230511': 1.199000, '01224230515': 0.149000, '01224230461': 0.115000, '01224230533': 0.572000, '01224230451': 0.302000, '01223209883': 0.476000, '01223209884': 0.676000, '01223219126': 0.531000, '01223209881': 0.561000, '01223192283': 1.972000, '01222654504': 0.601000, '01222755541': 0.282000, '01222766541': 0.326000, '01222709541': 2.796000, '01222744754': 5.270000, '01222719541': 1.568000, '01222739541': 1.371000, '01222587543': 0.404000, '01222666541': 0.412000, '01221291991': 0.127000, '01223192386': 0.204000, '01222714503': 0.235000, '01224230446': 0.427000, '01224230532': 0.261000, '01222667543': 0.201000, '01222764503': 0.307000, '01222586543': 0.244000, '01222684504': 0.068000, '01222699987': 0.164000, '01222742956': 0.553000, '01222684501': 0.641000, '01222699984': 0.709000, '01224230479': 0.091000, '01221731209': 0.106000, '01224230558': 0.302000, '01224230495': 0.276000, '01222739987': 0.527000, '01222739986': 0.138000, '01221388812': 0.125000, '01221388441': 0.142000, '01221721213': 0.173000, '01221961213': 0.321000, '01223187386': 0.267000, '01223192395': 0.238000, '01224273086': 0.196000, '01222567452': 0.501000, '01222587452': 0.338000, '01221566970': 0.381000, '01221566958': 0.000000, '01222714504': 0.296000, '01222664504': 0.302000, '01222676543': 0.230000, '01222742757': 0.140000, '01222647452': 0.150000, '01222744504': 0.401000, '01222749989': 0.612000, '01222746383': 0.354000, '01222776543': 0.397000, '01222745635': 0.256000, '01222597452': 1.061000, '01222745363': 0.184000, '01222779984': 0.170000, '01224230436': 0.276000, '01222758870': 0.341000, '01221474412': 0.136000, '01221474414': 0.137000, '01222779987': 0.152000, '01224273013': 1.680000, '01222745527': 0.230000, '01222745458': 0.220000, '01222664501': 0.588000, '01222779986': 0.378000, '01224230496': 0.285000, '01221566963': 0.105000, '01221574336': 0.163000, '01224230433': 0.066000, '01222767541': 0.361000, '01222742927': 0.216000, '01222742916': 0.081000, '01222689984': 0.354000, '01222687452': 0.458000, '01222742760': 0.215000, '01224230525': 0.282000, '01222797541': 0.580000, '01224230439': 0.209000, '01224272937': 0.351000, '01224272982': 0.069000, '01224230449': 0.223000, '01224230506': 0.362000, '01222746381': 0.439000, '01224230477': 0.159000, '01224273037': 0.303000, '01223192327': 0.070000, '01223192308': 0.080000, '01223192263': 0.139000, '01223192287': 0.080000, '01223192392': 0.255000, '01224230491': 1.640000, '01221421994': 0.283000, '01221441994': 0.252000, '01222749929': 0.255000, '01222659986': 0.160000, '01224230473': 1.255000, '01223187393': 0.000000, '01224230530': 0.572000, '01223239872': 0.222000, '01224230488': 0.558000, '01223187389': 0.000000, '01223209885': 0.000000, '01224273039': 0.209000, '01224273091': 0.209000, '01224230570': 0.278000, '01224272955': 0.277000, '01224230483': 0.279000, '01224230513': 0.238000, '01224230482': 0.238000, '01223239867': 0.438000, '01224230507': 0.139000, '01224230517': 0.140000, '01224273038': 0.854000, '01224230490': 0.642000, '01222704501': 0.693000, '01222798870': 0.166000, '01223239866': 0.830000, '01222754501': 0.486000, '01222709929': 0.767000, '01222748870': 0.241000, '01224230528': 0.243000, '01222683542': 0.534000, '01222664503': 0.948000, '01222654503': 0.577000, '01222674504': 0.295000, '01222746482': 0.330000, '012227694504': 0.000000, '01222719989': 0.790000, '01221448178': 0.342000, '01222744503': 0.299000, '01223192284': 0.223000, '01223187417': 0.806000, '01223187414': 2.000000, '01222759929': 0.460000, '01221311993': 0.181000, '01221243882': 0.180000, '01221361991': 0.173000, '01223192328': 1.880000, '01221371991': 2.000000, '01221474413': 0.340000, '01221273883': 0.358000, '01222654501': 0.239000, '01222799985': 0.378000, '01221253884': 0.320000, '01220800593': 0.272000, '01222742949': 0.174000, '01222746459': 0.448000, '01222684503': 0.307000, '01224230460': 0.250000, '01224230565': 0.311000, '01224230465': 0.297000, '01221388068': 1.022000, '01221391442': 0.399000, '01221391244': 0.375000, '01221391199': 0.312000, '01221391155': 0.333000, '01224230476': 0.241000, '01221574346': 0.360000, '01221567020': 0.774000, '01222765541': 0.292000, '01222734504': 0.217000, '01221566961': 0.274000, '01221566960': 0.275000, '01223189591': 0.319000, '01221566971': 0.264000, '01223187435': 0.464000, '01221574354': 0.420000, '01223188887': 0.224000, '01221574324': 0.224000, '01221567011': 0.244000, '01222742946': 0.442000, '01222636543': 0.555000, '01222659984': 0.704000, '01222745943': 0.188000, '01222563542': 99.880997, '01224230564': 0.738000, '01224230568': 0.474000, '01224230541': 0.258000, '01220800748': 0.302000, '01222744780': 0.294000, '01224230541': 0.258000, '01224230539': 0.545000, '01224230534': 0.373000, '01222745479': 0.230000, '01222729989': 0.313000, '01222577452': 0.376000, '01222746397': 0.622000, '01222779985': 0.575000, '01222769989': 0.301000, '01222729987': 0.230000, '01222688541': 0.114000, '01222618542': 0.103000, '01224230435': 0.096000, '01224230487': 0.508000, '01223209889': 0.258000, '01223209891': 0.266000, '01223209888': 0.261000, '01224230504': 0.155000, '01224230486': 0.345000, '01224230469': 0.418000, '01224230510': 0.363000, '01222746461': 0.364000, '01224230443': 0.215000, '01222796541': 0.420000, '01224230512': 0.433000, '01222742798': 0.359000, '01222746421': 0.387000, '01222753541': 0.154000, '01222744501': 0.114000, '01222749984': 0.189000, '01222749985': 0.189000, '01222742888': 0.224000, '01222742934': 0.105000, '01222788870': 1.119000, '01222746472': 0.642000, '01222597541': 0.269000, '01222769542': 0.251000, '01222616541': 0.284000, '01222742704': 0.171000, '01224230437': 0.307000, '01222724501': 0.305000, '01221283886': 0.197000, '01222564542': 0.235000, '01222742908': 0.321000, '01222745934': 0.355000, '01222745495': 0.388000, '01222745859': 0.204000, '01224230516': 0.373000, '01224230500': 0.387000, '01221390965': 0.121000, '01221387937': 0.121000, '01221474387': 0.155000, '01221351991': 0.182000, '01221431994': 0.155000, '01221261996': 0.155000, '01222769984': 0.386000, '01223187402': 0.213000, '01223187398': 0.214000, '01223187384': 0.215000, '01223187403': 0.194000, '01223187406': 0.149000, '01224272944': 0.820000, '01221429366': 0.343000, '01221429367': 2.000000, '01221429369': 0.232000, '01221471994': 1.194000, '01221474403': 0.264000, '01221474402': 0.314000, '01221474406': 0.154000, '01221474407': 0.155000, '01221341993': 3.000000, '01221371993': 0.196000, '01223192410': 0.290000, '01223192453': 0.269000, '01221243885': 0.118000, '01221243887': 0.119000, '01224230464': 0.147000, '01223192393': 0.377000, '01223192394': 0.374000, '01223187395': 0.223000, '01224230458': 0.346000, '01224230459': 0.224000, '01222746380': 0.326000, '01222794503': 0.199000, '01222759989': 0.103000, '01220800701': 0.248000, '01222734543': 0.173000, '01222747452': 0.248000, '01223187394': 0.137000, '01223187387': 0.137000, '01221463494': 0.189000, '01221429368': 0.225000, '01221390254': 0.201000, '01221388836': 0.158000, '01221474404': 0.096000, '01221474405': 0.075000, '01222789986': 0.814000, '01224230502': 6.080000, '01224273014': 36.799999, '01224272948': 0.000000, '01223187306': 0.000000, '01223187305': 0.000000, '01221392626': 4.000000, '01221392897': 1.744270, '01224272943': 21.591999, '01224273042': 13.072000, '01223187310': 0.000000, '01223187316': 0.000000, '01223181056': 0.016400, '01223181052': 27.624001, '01223187319': 0.000000, '01223192261': 0.000000, '01223187358': 0.000000, '01224230567': 1.100000, '01224273017': 6.382000, '01223187286': 8.552000, '01223180993': 4.576000, '01220553054': 19.284000, '01224273061': 4.304000, '01224273022': 2.329000, '01221392027': 1.954964, '01221389654': 3.972100, '01221390900': 0.858319, '01221387086': 2.000000, '01221387826': 0.756426, '01223187380': 0.129525, '01221399481': 2.000000, '01221393131': 0.407572, '01221393546': 4.000000, '01224273046': 23.620001, '01224273052': 4.400000, '01223239879': 1.099000, '01223239880': 0.227964, '01223239878': 0.571000, '01223239876': 2.912000, '01223192275': 0.000000, '01223192271': 0.000000, '01223192368': 2.918630, '01223192376': 0.000000, '01223192373': 4.261000, '01223181052': 27.624001, '01223181049': 0.000000, '01224273085': 7.616000, '01224273018': 14.502000, '01224273092': 0.000000, '01224273096': 24.160000, '01223180966': 6.472000, '01223180976': 4.704000, '01224230447': 0.853000, '01224230455': 1.705000, '01224230466': 1.653000, '01224230441': 0.833000, '01224230521': 6.067000, '01224272948': 0.000000, '01224273045': 14.244000, '01224272958': 30.889999, '01224230559': 55.680000, '01224273026': 2.890000, '01224273079': 2.950000, '01224272971': 3.152000, '01223192371': 0.000000, '01223187370': 0.000000, '01223192249': 0.000000, '01220800675': 1.201000, '01224272988': 5.376000}

    # 2. get할 metric에서 가져올 특정 list 설정
    #lte_list= [['01223187332'], ['01224230502'], ['01224272943'], ['01223187357'], ['01224273096'], ['01220800675'], ['01224230548'], ['01224273046'], ['01223239888'], ['01223299446'], ['01224273022'], ['01223239886'], ['01220800701'], ['01223299434'], ['01223187276'], ['01223187286'], ['01223180976'], ['01224230521'], ['01223180994'], ['01224230529'], ['01224230467'], ['01223192391'], ['01221343888'], ['01224230577'], ['01224230493'], ['01224230501'], ['01224230526'], ['01221386983'], ['01223239875'], ['01223239870'], ['01221251996'], ['01224230542'], ['01224230434'], ['01224230484'], ['01224230485'], ['01224230470'], ['01222699986'], ['01222742200'], ['01222739929'], ['01224230527'], ['01223187397'], ['01222764501'], ['01223239874'], ['01223187431'], ['01223187430'], ['01222674501'], ['01220684147'], ['01222694501'], ['01224230509'], ['01224230472'], ['01224230478'], ['01222746390'], ['01222779929'], ['01224230518'], ['01222754503'], ['01224230546'], ['01224224149'], ['01220800623'], ['01220435025'], ['01224230511'], ['01224230515'], ['01224230461'], ['01224230533'], ['01224230451'], ['01223192386'], ['01224230446'], ['01224230532'], ['01222764503'], ['01222586543'], ['01222684504'], ['01222684501'], ['01224230479'], ['01223187386'], ['01222647452'], ['01222746383'], ['01224230436'], ['01222758870'], ['01221474412'], ['01221474414'], ['01222779987'], ['01222664501'], ['01221566963'], ['01221574336'], ['01224230433'], ['01224230525'], ['01224230439'], ['01224230449'], ['01220800592'], ['01224230457'], ['01222746381'], ['01223192263'], ['01224230491'], ['01221421994'], ['01221441994'], ['01222749929'], ['01224230551'], ['01224230473'], ['01223239872'], ['01224230488'], ['01224230513'], ['01224230482'], ['01224230507'], ['01224230517'], ['01224230490'], ['01222704501'], ['01222754501'], ['01222709929'], ['01224230528'], ['01222683542'], ['01221448178'], ['01223192284'], ['01222759929'], ['01221243882'], ['01221361991'], ['01221474413'], ['01222654501'], ['01222799985'], ['01221253884'], ['01220800593'], ['01224230460'], ['01224230565'], ['01224230465'], ['01224230476'], ['01221574346'], ['01221567020'], ['01221566961'], ['01221566960'], ['01221566971'], ['01223187435'], ['01221574354'], ['01223188887'], ['01221574324'], ['01222636543'], ['01222745943'], ['01224230564'], ['01224230541'], ['01224230539'], ['01224230534'], ['01222746397'], ['01224230435'], ['01224230487'], ['01224230489'], ['01224230504'], ['01224230486'], ['01224230469'], ['01224230510'], ['01224230443'], ['01222796541'], ['01224230512'], ['01222744501'], ['01224230437'], ['01222724501'], ['01221283886'], ['01222745934'], ['01222745495'], ['01224230516'], ['01224230500'], ['01221474387'], ['01221431994'], ['01221261996'], ['01223187402'], ['01223187398'], ['01223187384'], ['01221471994'], ['01221474403'], ['01221474402'], ['01221474406'], ['01221474407'], ['01221243887'], ['01224230464'], ['01223192393'], ['01223192394'], ['01224230458'], ['01224230459'], ['01223187394'], ['01221474404'], ['01221474405'], ['01222789986'], ['01220674130'], ['01220674064'], ['01220674076'], ['01220674061'], ['01220800602'], ['01220800591'], ['01220674093'], ['01220674088'], ['01220800573'], ['01221474395'], ['01220800684'], ['01220674121'], ['01220674078'], ['01220674112'], ['01220674094'], ['01221474399'], ['01220674085'], ['01221474389'], ['01220674157'], ['01221429374'], ['01221446671'], ['01221401991'], ['01220800716'], ['01220674084'], ['01220800763'], ['01221431991'], ['01220674095'], ['01220800669'], ['01220435093'], ['01221241996'], ['01221391991'], ['01221381991'], ['01223192096'], ['01223299440'], ['01223219093'], ['01224273017'], ['01223180993'], ['01223219115'], ['01223219114'], ['01224273087'], ['01224273045'], ['01224230559'], ['01223219089'], ['01224273026'], ['01224273079'], ['01224272971'], ['01222746396'], ['01222746350'], ['01224230549'], ['01224224135'], ['01224272966'], ['01222729929'], ['01222746456'], ['01222742834'], ['01223219130'], ['01223192247'], ['01222745462'], ['01221574357'], ['01222754504'], ['01222674503'], ['01224230531'], ['01224230569'], ['01222742878'], ['01222746463'], ['01222704503'], ['01222745939'], ['01222734501'], ['01222769929'], ['01221574356'], ['01222745510'], ['01222719929'], ['01221574359'], ['01222746366'], ['01223239865'], ['01223219128'], ['01222742885'], ['01222745938'], ['01222724503'], ['01222704504'], ['01222742752'], ['01222694503'], ['01223209883'], ['01223209884'], ['01223192283'], ['01222654504'], ['01222714503'], ['01222699984'], ['01221731209'], ['01224230558'], ['01224230495'], ['01221388812'], ['01221388441'], ['01224273086'], ['01221566970'], ['01223209872'], ['01222714504'], ['01222664504'], ['01222742757'], ['01222744504'], ['01224230496'], ['01222689984'], ['01224230506'], ['01224230477'], ['01224273073'], ['01223219050'], ['01224230530'], ['01224273039'], ['01224273091'], ['01224230570'], ['01224272955'], ['01224230483'], ['01223239867'], ['01222798870'], ['01222748870'], ['01222664503'], ['01222654503'], ['01222674504'], ['01222746482'], ['01222744503'], ['01221273883'], ['01222746459'], ['01222684503'], ['01221388068'], ['01221567011'], ['01222742946'], ['01222659984'], ['01222744780'], ['01222745479'], ['01223209889'], ['01223209891'], ['01222742798'], ['01222746421'], ['01223209890'], ['01222745859'], ['01221351991'], ['01223239871'], ['01223187403'], ['01223187406'], ['01223192453'], ['01222746380'], ['01222794503'], ['01223187387'], ['01221390254'], ['01223299436'], ['01223219047'], ['01223299431'], ['01222714543'], ['01223239869'], ['01224230576'], ['01223188269'], ['01222742956'], ['01222745635'], ['01222745363'], ['01222742927'], ['01222742916'], ['01224272937'], ['01222742949'], ['01221391199'], ['01221391155'], ['01222618542'], ['01222742704'], ['01222742908'], ['01223209868'], ['01223299443'], ['01223299439'], ['01223209866'], ['01224273085'], ['01223180968'], ['01223209864'], ['01223209863'], ['01224272988'], ['01223299442'], ['01224272962'], ['01223187419'], ['01223188270'], ['01222744754'], ['01222587543'], ['01221291991'], ['01222567452'], ['01222577452'], ['01222688541'], ['01222769542'], ['01221463494'], ['01221474401']] 
    modem_list= ['01222799986', '01220800574', '01224230529', '01222714543', '01224230467', '01223239869', '01224230576', '01222679989', '01222746396', '01222746350', '01224230549', '01223192391', '01221343888', '01224230577', '01222729929', '01221574361', '01224230493', '01224230501', '01224272949', '01224230526', '01221386983', '01223239875', '01223239870', '01221451993', '01221251996', '01224230542', '01224230434', '01224230480', '01224230484', '01224230485', '01224230470', '01222746456', '01222742834', '01223219133', '01223219131', '01223219130', '01223219129', '01223192247', '01222745462', '01221574357', '01222699986', '01222742200', '01222649984', '01222754504', '01222739929', '01224230571', '01222674503', '01224230527', '01224230569', '01222669986', '01223187397', '01223209886', '01222764501', '01222742912', '01224272962', '01222745935', '01222745933', '01222745947', '01222742969', '01222742878', '01222746463', '01223239874', '01223239873', '01222704503', '01223187431', '01223187430', '01224272938', '01222745939', '01222674501', '01220684147', '01222694501', '01222734501', '01223187419', '01223188270', '01223189537', '01222769929', '01221574356', '01224230509', '01224230472', '01224230478', '01222746390', '01222745510', '01222719929', '01221574359', '01222746366', '01222779929', '01223239865', '01223219128', '01224230518', '01223187436', '01223188269', '01222754503', '01222742885', '01222745938', '01222724503', '01222704504', '01222742752', '01222694503', '01224230546', '01221341991', '01224224149', '01220800623', '01220435025', '01224230511', '01224230515', '01224230461', '01224230533', '01224230451', '01223209883', '01223209884', '01223219126', '01223209881', '01223192283', '01222654504', '01222755541', '01222766541', '01222709541', '01222744754', '01222719541', '01222739541', '01222587543', '01222666541', '01221291991', '01223192386', '01222714503', '01224230446', '01224230532', '01222667543', '01222764503', '01222586543', '01222684504', '01222699987', '01222742956', '01222684501', '01222699984', '01224230479', '01221731209', '01224230558', '01224230495', '01222739987', '01222739986', '01221388812', '01221388441', '01221721213', '01221961213', '01223187386', '01223192395', '01224273086', '01222567452', '01222587452', '01221566970', '01221566958', '01222714504', '01222664504', '01222676543', '01222742757', '01222647452', '01222744504', '01222749989', '01222746383', '01222776543', '01222745635', '01222597452', '01222745363', '01222779984', '01224230436', '01222758870', '01221474412', '01221474414', '01222779987', '01224273013', '01222745527', '01222745458', '01222664501', '01222779986', '01224230496', '01221566963', '01221574336', '01224230433', '01222767541', '01222742927', '01222742916', '01222689984', '01222687452', '01222742760', '01224230525', '01222797541', '01224230439', '01224272937', '01224272982', '01224230449', '01224230506', '01222746381', '01224230477', '01224273037', '01223192327', '01223192308', '01223192263', '01223192287', '01223192392', '01224230491', '01221421994', '01221441994', '01222749929', '01222659986', '01224230473', '01223187393', '01224230530', '01223239872', '01224230488', '01223187389', '01223209885', '01224273039', '01224273091', '01224230570', '01224272955', '01224230483', '01224230513', '01224230482', '01223239867', '01224230507', '01224230517', '01224273038', '01224230490', '01222704501', '01222798870', '01223239866', '01222754501', '01222709929', '01222748870', '01224230528', '01222683542', '01222664503', '01222654503', '01222674504', '01222746482', '012227694504', '01222719989', '01221448178', '01222744503', '01223192284', '01223187417', '01223187414', '01222759929', '01221311993', '01221243882', '01221361991', '01223192328', '01221371991', '01221474413', '01221273883', '01222654501', '01222799985', '01221253884', '01220800593', '01222742949', '01222746459', '01222684503', '01224230460', '01224230565', '01224230465', '01221388068', '01221391442', '01221391244', '01221391199', '01221391155', '01224230476', '01221574346', '01221567020', '01222765541', '01222734504', '01221566961', '01221566960', '01223189591', '01221566971', '01223187435', '01221574354', '01223188887', '01221574324', '01221567011', '01222742946', '01222636543', '01222659984', '01222745943', '01222563542', '01224230564', '01224230568', '01224230541', '01220800748', '01222744780', '01224230541', '01224230539', '01224230534', '01222745479', '01222729989', '01222577452', '01222746397', '01222779985', '01222769989', '01222729987', '01222688541', '01222618542', '01224230435', '01224230487', '01223209889', '01223209891', '01223209888', '01224230504', '01224230486', '01224230469', '01224230510', '01222746461', '01224230443', '01222796541', '01224230512', '01222742798', '01222746421', '01222753541', '01222744501', '01222749984', '01222749985', '01222742888', '01222742934', '01222788870', '01222746472', '01222597541', '01222769542', '01222616541', '01222742704', '01224230437', '01222724501', '01221283886', '01222564542', '01222742908', '01222745934', '01222745495', '01222745859', '01224230516', '01224230500', '01221390965', '01221387937', '01221474387', '01221351991', '01221431994', '01221261996', '01222769984', '01223187402', '01223187398', '01223187384', '01223187403', '01223187406', '01224272944', '01221429366', '01221429367', '01221429369', '01221471994', '01221474403', '01221474402', '01221474406', '01221474407', '01221341993', '01221371993', '01223192410', '01223192453', '01221243885', '01221243887', '01224230464', '01223192393', '01223192394', '01223187395', '01224230458', '01224230459', '01222746380', '01222794503', '01222759989', '01220800701', '01222734543', '01222747452', '01223187394', '01223187387', '01221463494', '01221429368', '01221390254', '01221388836', '01221474404', '01221474405', '01222789986', '01224230502', '01224273014', '01224272948', '01223187306', '01223187305', '01221392626', '01221392897', '01224272943', '01224273042', '01223187310', '01223187316', '01223181056', '01223181052', '01223187319', '01223192261', '01223187358', '01224230567', '01224273017', '01223187286', '01223180993', '01220553054', '01224273061', '01224273022', '01221392027', '01221389654', '01221390900', '01221387086', '01221387826', '01223187380', '01221399481', '01221393131', '01221393546', '01224273046', '01224273052', '01223239879', '01223239880', '01223239878', '01223239876', '01223192275', '01223192271', '01223192368', '01223192376', '01223192373', '01223181052', '01223181049', '01224273085', '01224273018', '01224273092', '01224273096', '01223180966', '01223180976', '01224230447', '01224230455', '01224230466', '01224230441', '01224230521', '01224272948', '01224273045', '01224272958', '01224230559', '01224273026', '01224273079', '01224272971', '01223192371', '01223187370', '01223192249', '01220800675', '01224272988']
    print '<총 {0!r}개의 Modem list 데이터 추출>\n'.format(len(modem_list))
    
    modem_count = 0                             # lte 처리 갯수
    start_time = datetime.datetime.now()        # 프로그램 시작값

    #3. 입력된 lte_list를 for문으로 하나씩 get함
    #4. get한 값을 put함
    #5. 반복적으로 get & put 마지막 list까지
    ### 시작일 ~ 끝일까지 하루 data씩 get & put (get data 많으면 opentsdb가 timeout될 수 있기 때문에)
    for modem in modem_list:
        #modem = str(modem)[2:-2]
        print modem
        #iterate every days and must be started w/ start of the day
        tmp_time = datetime.datetime.now()
        end = first
        while is_past(end, last):
            start = end
            end = add_time(start, days=1)
            modem_holiday = is_weekend(start)
            query_result = tsdb_query(query, start, end, metric_in, modem, modem_holiday)
            for group in query_result:
                if USE_HTTP_API_PUT:
                    tsdb_put(put, metric_out, group['dps'], modem, out_file)
                else:
                    tsdb_put_telnet(host, port, metric_out, group['dps'], group['tags'])
        modem_count += 1
        print 'elapsed time: {0!s}, {1!s}'.format(datetime.datetime.now() - tmp_time, datetime.datetime.now() - start_time)
        print '<총 {0!r}/{1!r}개의 Modem 데이터 처리>\n'.format(modem_count, len(modem_list))
    print 'total elapsed time: {0!s}'.format(datetime.datetime.now() - start_time)
    